# Key results

<span style="color:red;">
NB! Dette er ikke offisiell statistikk og m√• ikke deles utenfor NAV.
</span>

```{python}
from google.cloud.bigquery import Client
import plotly.graph_objects as go
```

```{python}
project = "toi-prod-324e"
bq_client = Client(project)
```

```{python}
query = f"""
    select count(distinct stilling_id) from `rekrutteringsbistand_statistikk_pg15.visning_kontaktinfo` as visning_kontaktinfo
    inner join `rekrutteringsbistand_statistikk_pg15.kandidatliste` as kandidatliste
            on kandidatliste.stillings_id = visning_kontaktinfo.stilling_id
    inner join `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall
        on visning_kontaktinfo.stilling_id = kandidatutfall.stillingsid
        and visning_kontaktinfo.aktor_id = kandidatutfall.aktorid
    where (
        (alder < 30 or alder > 49) or
        (hull_i_cv is true) or
        (innsatsbehov in ('VARIG', 'BATT', 'BFORM'))
    );
    """
antall_kandidatlister_med_minst_en_kandidat_i_prioritert_maalgruppe_som_har_faatt_vist_sin_kontaktinfo = next(bq_client.query(query=query).result())[0]
```

```{python}
query = f"""
    select count(distinct kandidatliste_id) 
    from `rekrutteringsbistand_statistikk_pg15.kandidatliste`
    where stilling_opprettet_tidspunkt is not null
    """
antall_kandidatlister_tilknyttet_stilling = next(bq_client.query(query=query).result())[0]
```

```{python}
query = f"""
    with id_siste_utfall_per_kandidat_per_liste as (
        select max(id) from `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall 
        group by aktorid, kandidatlisteid
    ),
    faatt_jobben_utfall as (
        select * from `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall 
        where id in (select * from id_siste_utfall_per_kandidat_per_liste)
        and utfall = 'FATT_JOBBEN'
    )
    select count(distinct kandidatliste_id)
    from`rekrutteringsbistand_statistikk_pg15.kandidatliste` as kandidatliste
                inner join faatt_jobben_utfall
                on faatt_jobben_utfall.kandidatlisteid = kandidatliste.kandidatliste_id
                inner join `rekrutteringsbistand_statistikk_pg15.stilling` as stilling
                on kandidatliste.stillings_id = stilling.uuid
    where kandidatliste.stilling_opprettet_tidspunkt is not null
        and (stilling.stillingskategori = 'STILLING' or stilling.stillingskategori is null)
        and (
            (faatt_jobben_utfall.alder < 30 or faatt_jobben_utfall.alder > 49) or 
            (faatt_jobben_utfall.hull_i_cv is true) or 
            (faatt_jobben_utfall.innsatsbehov in ('VARIG', 'BATT', 'BFORM'))
        )
    """
antall_kandidatlister_der_minst_en_kandidat_i_prioritert_maalgruppe_fikk_jobben = next(bq_client.query(query=query).result())[0]
```

```{python}
query = f"""
    with id_siste_utfall_per_kandidat_per_liste as (
        select max(id) from `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall 
        group by aktorid, kandidatlisteid
    ),
    presentert_utfall as (
        select * from `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall 
        where id in (select * from id_siste_utfall_per_kandidat_per_liste)
        and (utfall = 'FATT_JOBBEN' or utfall = 'PRESENTERT')
    )
    select count(distinct kandidatliste_id)
    from`rekrutteringsbistand_statistikk_pg15.kandidatliste` as kandidatliste
                inner join presentert_utfall
                        on presentert_utfall.kandidatlisteid = kandidatliste.kandidatliste_id
                inner join `rekrutteringsbistand_statistikk_pg15.stilling` as stilling
                        on kandidatliste.stillings_id = stilling.uuid
    where kandidatliste.er_direktemeldt is true 
        and kandidatliste.stilling_opprettet_tidspunkt is not null
        and stilling.stillingskategori = 'STILLING' or stilling.stillingskategori is null;
    """
antall_direktemeldte_stillinger_med_minst_en_presentert_kandidat = next(bq_client.query(query=query).result())[0]
```

```{python}
query = f"""
    select count(unike_kandidatlister.kandidatliste_id) from (
        select distinct kandidatliste_id from`rekrutteringsbistand_statistikk_pg15.kandidatliste` as kandidatliste
            where er_direktemeldt is true and stilling_opprettet_tidspunkt is not null
    ) as unike_kandidatlister
    """
antall_kandidatlister_tilknyttet_direktemeldt_stilling = next(bq_client.query(query=query).result())[0]
```

```{python}
query = f"""
    select
        format_datetime('%Y-%m', visning_kontaktinfo.tidspunkt) as tidspunkt_visning_kontaktinfo_yearmonth,
        count(distinct stilling_id)
    from `rekrutteringsbistand_statistikk_pg15.visning_kontaktinfo` as visning_kontaktinfo
        inner join `rekrutteringsbistand_statistikk_pg15.kandidatliste` as kandidatliste
            on kandidatliste.stillings_id = visning_kontaktinfo.stilling_id
        inner join `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall
            on visning_kontaktinfo.stilling_id = kandidatutfall.stillingsid
            and visning_kontaktinfo.aktor_id = kandidatutfall.aktorid
    where kandidatliste.stilling_opprettet_tidspunkt >= '2023-03-01'
        and (
            (alder < 30 or alder > 49) or
            (hull_i_cv is true) or
            (innsatsbehov in ('VARIG', 'BATT', 'BFORM'))
        )
    group by tidspunkt_visning_kontaktinfo_yearmonth
    order by tidspunkt_visning_kontaktinfo_yearmonth;
    """
df_antall_kandidatlister_med_minst_en_kandidat_i_prioritert_maalgruppe_som_har_faatt_vist_sin_kontaktinfo_per_maaned = bq_client.query(query=query).to_dataframe().set_index('tidspunkt_visning_kontaktinfo_yearmonth')
```

```{python}
query = f"""
    select 
        format_datetime('%Y-%m', unike_kandidatlister.stilling_opprettet_tidspunkt) as tidspunkt_stilling_opprettet_yearmonth,
    count(unike_kandidatlister.kandidatliste_id)
    from (
        select distinct kandidatliste_id, stilling_opprettet_tidspunkt from`rekrutteringsbistand_statistikk_pg15.kandidatliste` as kandidatliste
        where stilling_opprettet_tidspunkt is not null
    ) as unike_kandidatlister
    where unike_kandidatlister.stilling_opprettet_tidspunkt >= '2023-03-01'
    group by tidspunkt_stilling_opprettet_yearmonth
    order by tidspunkt_stilling_opprettet_yearmonth;
    """
df_antall_kandidatlister_tilknyttet_stilling_per_maaned = bq_client.query(query=query).to_dataframe().set_index('tidspunkt_stilling_opprettet_yearmonth')
```

```{python}
query = f"""
    with id_siste_utfall_per_kandidat_per_liste as (
        select max(id) from `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall 
        group by aktorid, kandidatlisteid
    ),
    faatt_jobben_utfall as (
        select * from `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall 
        where id in (select * from id_siste_utfall_per_kandidat_per_liste)
        and utfall = 'FATT_JOBBEN'
    )
    select 
        format_datetime('%Y-%m', kandidatliste.stilling_opprettet_tidspunkt) as tidspunkt_stilling_opprettet_yearmonth,
        count(distinct kandidatliste_id)
    from`rekrutteringsbistand_statistikk_pg15.kandidatliste` as kandidatliste
                inner join faatt_jobben_utfall
                on faatt_jobben_utfall.kandidatlisteid = kandidatliste.kandidatliste_id
                inner join `rekrutteringsbistand_statistikk_pg15.stilling` as stilling
                on kandidatliste.stillings_id = stilling.uuid
    where kandidatliste.stilling_opprettet_tidspunkt is not null
        and kandidatliste.stilling_opprettet_tidspunkt >= '2023-03-01'
        and (stilling.stillingskategori = 'STILLING' or stilling.stillingskategori is null)
        and (
            (faatt_jobben_utfall.alder < 30 or faatt_jobben_utfall.alder > 49) or 
            (faatt_jobben_utfall.hull_i_cv is true) or 
            (faatt_jobben_utfall.innsatsbehov in ('VARIG', 'BATT', 'BFORM'))
        )
    group by tidspunkt_stilling_opprettet_yearmonth
    order by tidspunkt_stilling_opprettet_yearmonth;
    """
df_antall_kandidatlister_der_minst_en_kandidat_i_prioritert_maalgruppe_fikk_jobben_per_maaned = bq_client.query(query=query).to_dataframe()
```

```{python}
query = f"""
    with id_siste_utfall_per_kandidat_per_liste as (
        select max(id) from `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall
        group by aktorid, kandidatlisteid
    ),
    presentert_utfall as (
        select * from `rekrutteringsbistand_statistikk_pg15.kandidatutfall` as kandidatutfall
        where id in (select * from id_siste_utfall_per_kandidat_per_liste)
            and (utfall = 'FATT_JOBBEN' or utfall = 'PRESENTERT')
    )
    select 
        format_datetime('%Y-%m', unike_kandidatlister.stilling_opprettet_tidspunkt) as tidspunkt_stilling_opprettet_yearmonth,
        count(unike_kandidatlister.kandidatliste_id)
    from (
        select distinct kandidatliste_id, stilling_opprettet_tidspunkt
        from`rekrutteringsbistand_statistikk_pg15.kandidatliste` as kandidatliste
            inner join presentert_utfall
                on presentert_utfall.kandidatlisteid = kandidatliste.kandidatliste_id
            inner join `rekrutteringsbistand_statistikk_pg15.stilling` as stilling
                on kandidatliste.stillings_id = stilling.uuid
        where kandidatliste.er_direktemeldt is true
            and kandidatliste.stilling_opprettet_tidspunkt is not null
            and stilling.stillingskategori = 'STILLING' or stilling.stillingskategori is null
    ) as unike_kandidatlister
    where unike_kandidatlister.stilling_opprettet_tidspunkt >= '2023-03-01'
    group by tidspunkt_stilling_opprettet_yearmonth
    order by tidspunkt_stilling_opprettet_yearmonth;
    """
df_antall_direktemeldte_stillinger_med_minst_en_presentert_kandidat_per_maaned = bq_client.query(query=query).to_dataframe()
```

```{python}
query = f"""
    select 
        format_datetime('%Y-%m', unike_kandidatlister.stilling_opprettet_tidspunkt) as tidspunkt_stilling_opprettet_yearmonth,
        count(unike_kandidatlister.kandidatliste_id)
    from (
        select distinct kandidatliste_id, stilling_opprettet_tidspunkt from`rekrutteringsbistand_statistikk_pg15.kandidatliste` as kandidatliste
        where kandidatliste.er_direktemeldt is true and stilling_opprettet_tidspunkt is not null
    ) as unike_kandidatlister
    where unike_kandidatlister.stilling_opprettet_tidspunkt >= '2023-03-01'
    group by tidspunkt_stilling_opprettet_yearmonth
    order by tidspunkt_stilling_opprettet_yearmonth;
    """
df_antall_kandidatlister_tilknyttet_direktemeldt_stilling_per_maaned = bq_client.query(query=query).to_dataframe()
```

## Row

```{python}
#| component: valuebox
#| title: Minst √©n i prioritert m√•lgruppe fikk vist sin kontatktinfo
minst_en_i_prioritert_gruppe_fikk_vist_sin_kontaktinfo = antall_kandidatlister_med_minst_en_kandidat_i_prioritert_maalgruppe_som_har_faatt_vist_sin_kontaktinfo/antall_kandidatlister_tilknyttet_stilling

dict(
    icon = "eye",
    color = "primary",
    value = str(round(minst_en_i_prioritert_gruppe_fikk_vist_sin_kontaktinfo*100,1))+"%"
)
```

```{python}
#| component: valuebox
#| title: Kandidater i prioritert m√•lgruppe som fikk jobben
kandidater_i_prioritert_gruppe_som_fikk_jobben = antall_kandidatlister_der_minst_en_kandidat_i_prioritert_maalgruppe_fikk_jobben/antall_kandidatlister_tilknyttet_stilling

dict(
    icon = "check-circle",
    color = "warning",
    value = str(round(kandidater_i_prioritert_gruppe_som_fikk_jobben*100,1))+"%"
)
```

```{python}
#| component: valuebox
#| title: Direktemeldte stillinger med minst √©n presentert kandidat
direktemeldte_stillinger_med_minst_en_presentert_kandidat = antall_direktemeldte_stillinger_med_minst_en_presentert_kandidat/antall_kandidatlister_tilknyttet_direktemeldt_stilling

dict(
    icon = "card-checklist",
    value = str(round(direktemeldte_stillinger_med_minst_en_presentert_kandidat*100,1))+"%"
)
```

## Row
```{python}
#| title: Andel der minst √©n i prioritert m√•lgruppe fikk vist sin kontaktinfo per m√•ned
andel_vist_kontaktinfo_prioritert_m√•lgruppe = df_antall_kandidatlister_med_minst_en_kandidat_i_prioritert_maalgruppe_som_har_faatt_vist_sin_kontaktinfo_per_maaned / df_antall_kandidatlister_tilknyttet_stilling_per_maaned

fig = go.Figure(
    data=[
        go.Bar(
            x=andel_vist_kontaktinfo_prioritert_m√•lgruppe.index,
            y=andel_vist_kontaktinfo_prioritert_m√•lgruppe.f0_ ,
        )
    ]
)
fig = fig.update_layout(
    xaxis_title="",
    yaxis_title="",
    yaxis_tickformat = ',.0%',
)

fig = fig.update_xaxes(nticks=24)
fig.show()
```